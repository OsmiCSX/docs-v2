(self.webpackChunkosmicsx=self.webpackChunkosmicsx||[]).push([[3436],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6154:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return f}});var r,o=n(2122),i=n(9756),a=(n(7294),n(3905)),s=["components"],l={sidebar_position:2},c="Configuration",p={unversionedId:"getting-started/configuration",id:"getting-started/configuration",isDocsHomePage:!1,title:"Configuration",description:"Setup",source:"@site/docs/getting-started/configuration.md",sourceDirName:"getting-started",slug:"/getting-started/configuration",permalink:"/docs/next/getting-started/configuration",editUrl:"https://github.com/OsmiCSX/docs-v2/docs/getting-started/configuration.md",version:"current",lastUpdatedAt:1658373924,formattedLastUpdatedAt:"7/21/2022",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/next/getting-started/installation"},next:{title:"Hooks",permalink:"/docs/next/api/hooks"}},u=[{value:"Setup",id:"setup",children:[{value:"Custom Theme",id:"custom-theme",children:[]},{value:"Provider",id:"provider",children:[]}]},{value:"Usage",id:"usage",children:[{value:"Inline Style",id:"inline-style",children:[]},{value:"Separate Style File",id:"separate-style-file",children:[]}]}],m=(r="OsmiProvider",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)}),d={toc:u};function f(e){var t=e.components,n=(0,i.Z)(e,s);return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configuration"},"Configuration"),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("h3",{id:"custom-theme"},"Custom Theme"),(0,a.kt)("p",null,"Create custom file ",(0,a.kt)("inlineCode",{parentName:"p"},"osmi.config.js")," (",(0,a.kt)("em",{parentName:"p"},"optional"),")"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"export default {\n  colors: {\n    // custom colors\n  },\n  spacing: {\n    // custom spacing\n  },\n  border: {\n    width: {\n      // border width\n    },\n    radius: {\n      // border radius\n    },\n  },\n  font: {\n    family: {\n      // font family\n    },\n    size: {\n      // font size\n    },\n  },\n  lineHeight: {\n    // line height\n  },\n  letterSpacing: {\n    // letter spacing\n  },\n  shadow: {\n    // shadows\n  },\n};\n")),(0,a.kt)("h3",{id:"provider"},"Provider"),(0,a.kt)("p",null,"OsmiCSX includes a ",(0,a.kt)(m,{mdxType:"OsmiProvider"})," component, which makes the OsmiCSX available to the rest of your app:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import { OsmiProvider } from "osmicsx";\nimport theme from "./osmi.config.js"; // your custom style file\nimport App from "App.js"; // your main app\n\nreturn (\n  <OsmiProvider theme={theme}>\n    <App />\n  </OsmiProvider>\n);\n')),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"inline-style"},"Inline Style"),(0,a.kt)("p",null,"Use osmicsx as inline style via style attribute"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"harmony",harmony:!0},'import { View } from "react-native";\nimport { useStyles } from "osmicsx";\n\nconst Rectangle = () => {\n  const { apply } = useStyles();\n\n  return <View style={apply("w-100 h-100 bg-blue-500 rounded")} />;\n};\n\nexport default Rectangle;\n')),(0,a.kt)("h3",{id:"separate-style-file"},"Separate Style File"),(0,a.kt)("p",null,"Create your styling file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"harmony",harmony:!0},'export default {\n  container: "flex items-center justify-center",\n  rectangle: "w-100 h-100 bg-blue-500 rounded",\n};\n')),(0,a.kt)("p",null,"Import style file in your screen/component file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"harmony",harmony:!0},'import { View } from "react-native";\n\n// styles\nimport { useStyles } from "osmicsx";\nimport styles from "./HomeScreenStyle.js";\n\nconst HomeScreen = () => {\n  const { apply } = useStyles();\n\n  return (\n    <View style={apply(styles.container)}>\n      <View style={apply(styles.rectangle)} />\n    </View>\n  );\n};\n\nexport default HomeScreen;\n')))}f.isMDXComponent=!0}}]);